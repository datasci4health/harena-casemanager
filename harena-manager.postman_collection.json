{
	"info": {
		"_postman_id": "617bf0ac-aae7-4078-bf70-b333d1e1127f",
		"name": "harena-manager",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "7375845"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "v2 (JWT  - DEPRECATED)",
					"item": [
						{
							"name": "/auth/login jwt",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var response = pm.response.json();",
											"pm.environment.set(\"user-token\", response.token);",
											"pm.environment.set(\"user-id\", response.id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "",
											"type": "text"
										},
										{
											"key": "password",
											"value": "",
											"type": "text"
										},
										{
											"key": "refresh_token",
											"value": "{{user-refreshToken}}",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{api-base-url}}/auth/login/",
									"host": [
										"{{api-base-url}}"
									],
									"path": [
										"auth",
										"login",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "/auth/logout jwt",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{user-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{api-base-url}}/auth/logout/",
									"host": [
										"{{api-base-url}}"
									],
									"path": [
										"auth",
										"logout",
										""
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "/auth/login session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();",
									"console.log(response)",
									"pm.environment.set(\"user-token\", response.token);",
									"pm.environment.set(\"user-refreshToken\", response.refreshToken);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "email",
									"value": "",
									"type": "text"
								},
								{
									"key": "password",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/auth/login",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "/auth/login_event session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();",
									"console.log(response)",
									"pm.environment.set(\"user-token\", response.token);",
									"pm.environment.set(\"user-refreshToken\", response.refreshToken);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "eventId",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "username",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "login",
									"value": "",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/auth/login_event",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"auth",
								"login_event"
							]
						}
					},
					"response": []
				},
				{
					"name": "/auth/token_login session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();",
									"console.log(response)",
									"pm.environment.set(\"user-token\", response.token);",
									"pm.environment.set(\"user-refreshToken\", response.refreshToken);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "token",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/auth/token_login",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"auth",
								"token_login"
							]
						}
					},
					"response": []
				},
				{
					"name": "/auth/logout session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"user-token\", 'revoked');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{api-base-url}}/auth/logout",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "/auth/checkToken session",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-base-url}}/auth/check",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"auth",
								"check"
							]
						}
					},
					"response": []
				}
			],
			"description": "Authentication endpoints"
		},
		{
			"name": "user",
			"item": [
				{
					"name": "/cases_by_quest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    ",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "quest_id",
									"value": "aa9da08a-1bd4-4a57-b4bf-076a889d6046",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/user/cases_by_quest",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"user",
								"cases_by_quest"
							]
						}
					},
					"response": []
				},
				{
					"name": "/user/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-base-url}}/user/{{user-id}}",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"user",
								"{{user-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/user/cases",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();",
									"",
									"// pm.environment.set(\"case-id\", response.token);",
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    ",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "clearance",
									"value": "4",
									"type": "text"
								},
								{
									"key": "published",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "fInstitution",
									"value": "b153fa2d-3067-461f-ba5b-c5c592d63aa5",
									"type": "text",
									"disabled": true
								},
								{
									"key": "fUserType",
									"value": "student",
									"type": "text",
									"disabled": true
								},
								{
									"key": "fSpecialty",
									"value": "0",
									"type": "text",
									"disabled": true
								},
								{
									"key": "fProperty",
									"value": "feedback",
									"type": "text",
									"disabled": true
								},
								{
									"key": "fPropertyValue",
									"value": "1",
									"type": "text",
									"disabled": true
								},
								{
									"key": "fSearchStr",
									"value": "simple",
									"description": "Text search for case title, description and keyword",
									"type": "text",
									"disabled": true
								},
								{
									"key": "nItems",
									"value": "10",
									"type": "text",
									"disabled": true
								},
								{
									"key": "nPage",
									"value": "1",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/user/cases",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"user",
								"cases"
							]
						}
					},
					"response": []
				},
				{
					"name": "/user/quests",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-base-url}}/user/quests",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"user",
								"quests"
							]
						}
					},
					"response": []
				},
				{
					"name": "/user/property",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "propertyTitle",
									"value": "prognosis-current-lvl",
									"description": "Optional (To list just a specific property)",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/user/property",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"user",
								"property"
							]
						}
					},
					"response": []
				},
				{
					"name": "/user/cases_by_institution (to trash)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();",
									"",
									"// pm.environment.set(\"case-id\", response.token);",
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    ",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{api-base-url}}/user/cases_by_institution",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"user",
								"cases_by_institution"
							]
						}
					},
					"response": []
				},
				{
					"name": "/user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();",
									"",
									"pm.environment.set(\"user-id\", response.id);",
									"// pm.environment.set(\"user\", response);",
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    ",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "Edu Name",
									"type": "text"
								},
								{
									"key": "email",
									"value": "edu@email.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "edu",
									"type": "text"
								},
								{
									"key": "login",
									"value": "edu",
									"type": "text"
								},
								{
									"key": "institution",
									"value": "minho",
									"description": "acronym of the institution: unicamp, minho, mcunicamp",
									"type": "text"
								},
								{
									"key": "grade",
									"value": "student",
									"description": "\"professor\" or \"student\"",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/user",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "/user/self",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();",
									"",
									"pm.environment.set(\"user-id\", response.id);",
									"// pm.environment.set(\"user\", response);",
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    ",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "Edu Name",
									"type": "text"
								},
								{
									"key": "email",
									"value": "edu@email.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "edu",
									"type": "text"
								},
								{
									"key": "login",
									"value": "edu",
									"type": "text"
								},
								{
									"key": "institution",
									"value": "minho",
									"description": "acronym of the institution: unicamp, minho, mcunicamp",
									"type": "text"
								},
								{
									"key": "grade",
									"value": "student",
									"description": "\"professor\" or \"student\"",
									"type": "text"
								},
								{
									"key": "eventId",
									"value": "",
									"description": "id (hash code) of the event",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/user/self",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"user",
								"self"
							]
						}
					},
					"response": []
				},
				{
					"name": "/user/property",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "propertyTitle",
									"value": "prognosis-lvl-1-pacient",
									"type": "text"
								},
								{
									"key": "propertyValue",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/user/property",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"user",
								"property"
							]
						}
					},
					"response": []
				},
				{
					"name": "/user",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "edu",
									"type": "text",
									"disabled": true
								},
								{
									"key": "email",
									"value": "edu@email.com",
									"type": "text",
									"disabled": true
								},
								{
									"key": "login",
									"value": "jacinta",
									"type": "text",
									"disabled": true
								},
								{
									"key": "grade",
									"value": "teste1111",
									"type": "text",
									"disabled": true
								},
								{
									"key": "password",
									"value": "jacintomaster",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/user",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "/user/password/reset",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "userId",
									"value": "",
									"description": "user id (hash value)",
									"type": "text"
								},
								{
									"key": "newPassword",
									"value": "password",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/user/password/reset",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"user",
								"password",
								"reset"
							]
						}
					},
					"response": []
				},
				{
					"name": "/user/password",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "oldPassword",
									"value": "super",
									"type": "text"
								},
								{
									"key": "newPassword",
									"value": "secret",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/user/password/",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"user",
								"password",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/user/property",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "propertyTitle",
									"value": "prognosis-highest-lvl",
									"type": "text"
								},
								{
									"key": "propertyValue",
									"value": "10",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/user/property/",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"user",
								"property",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 or 204\", function () {",
									"    ",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api-base-url}}/user/{{user-id}}",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"user",
								"{{user-id}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "User services"
		},
		{
			"name": "case",
			"item": [
				{
					"name": "/case",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "caseId",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/case",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"case"
							]
						}
					},
					"response": []
				},
				{
					"name": "/case",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();",
									"console.log(response.id)",
									"pm.environment.set(\"case-id\", response.id);",
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    ",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Case dump",
									"type": "text"
								},
								{
									"key": "source",
									"value": "# Presentation (quiz, end)\n\nWrite here the **stem** of your quiz.\n\n> Write here the **lead-in** of your quiz.\n+ Answer-key <-> Presentation References \"Feedback for Answer-key\" >((right))\n+ Distractor 1 <-> \"Feedback for Distractor 1\"\n+ Distractor 2 <-> \"Feedback for Distractor 2\"\n+ Distractor 3 <-> \"Feedback for Distractor 3\"\n\n* Next Case -> Case.Next ((right))?\n\n# Note (note)\n\n**You answered:** ^Previous.input1^.\n\n\n\n^parameter^\n\n# Presentation References (note)\n\n**You answered:** ^Previous.input1^.\n\n\n\n^parameter^\n\nReferences <-> References\n\n# References (note_references)\n\n* [Enter References](References)\n\n___ Flow ___\n\n* Sequential:\n  * _sequential_\n\n___ Data ___\n\n* theme: simple(red)\n* namespaces:\n  * evidence: http://purl.org/versum/evidence/\n* templates:\n  * categories:\n    * detailed: simple/knot/description",
									"type": "text"
								},
								{
									"key": "description",
									"value": "test description",
									"type": "text"
								},
								{
									"key": "language",
									"value": "en",
									"type": "text"
								},
								{
									"key": "domain",
									"value": "test domain",
									"type": "text"
								},
								{
									"key": "specialty",
									"value": "test specialty ",
									"type": "text"
								},
								{
									"key": "keywords",
									"value": "keyword4;kw6",
									"type": "text"
								},
								{
									"key": "original_date",
									"value": "1987-09-13",
									"type": "text",
									"disabled": true
								},
								{
									"key": "complexity",
									"value": "Undergraduate",
									"type": "text"
								},
								{
									"key": "institution",
									"value": "uni",
									"type": "text"
								},
								{
									"key": "permissionEntity",
									"value": "university",
									"type": "text"
								},
								{
									"key": "permissionSubjectId",
									"value": "e31a6421-0f72-4ed9-8383-dcd70910230b",
									"type": "text"
								},
								{
									"key": "permissionClearance",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/case",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"case"
							]
						}
					},
					"response": []
				},
				{
					"name": "/case",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "caseId",
									"value": "",
									"type": "text"
								},
								{
									"key": "source",
									"value": "",
									"type": "text"
								},
								{
									"key": "title",
									"value": "",
									"type": "text"
								},
								{
									"key": "description",
									"value": "",
									"type": "text"
								},
								{
									"key": "language",
									"value": "",
									"type": "text"
								},
								{
									"key": "domain",
									"value": "",
									"type": "text"
								},
								{
									"key": "specialty",
									"value": "",
									"type": "text"
								},
								{
									"key": "keywords",
									"value": "",
									"type": "text"
								},
								{
									"key": "originalDate",
									"value": "",
									"type": "text"
								},
								{
									"key": "complexity",
									"value": "",
									"type": "text"
								},
								{
									"key": "published",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/case",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"case"
							]
						}
					},
					"response": []
				},
				{
					"name": "/case/link/user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();",
									"",
									"// pm.environment.set(\"case-uuid\", response.uuid);",
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    ",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "caseId",
									"value": "ad129f0e-0b4b-41bf-a18e-b2f6d2205f2d",
									"type": "text"
								},
								{
									"key": "userId",
									"value": "a4f64e13-1ef6-4c25-9b11-be8dc9778408",
									"type": "text"
								},
								{
									"key": "permission",
									"value": "read",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/case/link/user",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"case",
								"link",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "/case",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "caseId",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/case/",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"case",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/share",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "entity",
									"value": "group",
									"description": "user/group/institution",
									"type": "text"
								},
								{
									"key": "subject",
									"value": "",
									"description": "id of the user/group/institution (hash code)",
									"type": "text"
								},
								{
									"key": "subject_grade",
									"value": "",
									"description": "Choose a specific user grade (professor/student)",
									"type": "text",
									"disabled": true
								},
								{
									"key": "clearance",
									"value": "1",
									"description": "1: read/ 2: Comment/ 3: Share/ 4: Edit/ 5: Administration",
									"type": "text"
								},
								{
									"key": "table_id",
									"value": "",
									"description": "case ids (hash codes), separated by comma if you want multiple ids",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/case/share",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"case",
								"share"
							]
						}
					},
					"response": []
				},
				{
					"name": "withdraw",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "entity",
									"value": "group",
									"description": "user/group/institution",
									"type": "text"
								},
								{
									"key": "subject",
									"value": "",
									"description": "id of the user/group/institution (hash code)",
									"type": "text"
								},
								{
									"key": "table_id",
									"value": "",
									"description": "case id (hash code) - just one",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/case/withdraw",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"case",
								"withdraw"
							]
						}
					},
					"response": []
				},
				{
					"name": "/case/property",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "case_id",
									"value": "",
									"description": "id of the case related to the property",
									"type": "text"
								},
								{
									"key": "property_title",
									"value": "casepropertynovo",
									"description": "title of the property to be linked to the case (it will look for a property with this title or create a new one)",
									"type": "text"
								},
								{
									"key": "property_value",
									"value": "novissimo",
									"description": "free format value to the property (until 255 characters)",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/case/property",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"case",
								"property"
							]
						}
					},
					"response": []
				},
				{
					"name": "/case/property",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "case_id",
									"value": "af19035f-df50-4178-8f9c-bc0eab59e9bd",
									"type": "text"
								},
								{
									"key": "property_title",
									"value": "feedback",
									"type": "text"
								},
								{
									"key": "property_value",
									"value": "0",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/case/property",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"case",
								"property"
							]
						}
					},
					"response": []
				},
				{
					"name": "/case/annotation",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "case_id",
									"value": "",
									"description": "id of the annotated case",
									"type": "text"
								},
								{
									"key": "property_id",
									"value": "dc:description",
									"description": "id of the property related to the annotation (if empty default is dc:description)",
									"type": "text",
									"disabled": true
								},
								{
									"key": "range",
									"value": "0,10",
									"description": "annotated range in the document (start position and size separated by comma); separate multiple ranges by semicolons",
									"type": "text"
								},
								{
									"key": "fragment",
									"value": "a text fragement",
									"description": "copy of the annotated fragment in the document",
									"type": "text",
									"disabled": true
								},
								{
									"key": "comment",
									"value": "some comment",
									"description": "free text comment related to the annotation",
									"type": "text",
									"disabled": true
								},
								{
									"key": "source",
									"value": "1",
									"description": "source of the annotation (0 - undefined; 1 - manual; 2 - automated)",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/case/annotation",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"case",
								"annotation"
							]
						}
					},
					"response": []
				},
				{
					"name": "/case/annotations",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "case_id",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/case/annotations",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"case",
								"annotations"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "player",
			"item": [
				{
					"name": "/player/quests",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-base-url}}/player/quests",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"player",
								"quests"
							]
						}
					},
					"response": []
				},
				{
					"name": "/player/quest/cases",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "questId",
									"value": "ea8dbc12-e879-46e6-b5d7-e67ad88e841b",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/player/quest/cases",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"player",
								"quest",
								"cases"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "author",
			"item": [
				{
					"name": "/author/quests",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-base-url}}/author/quests",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"author",
								"quests"
							]
						}
					},
					"response": []
				},
				{
					"name": "/author/quest/cases",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "questId",
									"value": "5131b64a-04ff-4aec-af98-0edab334fd02",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/author/quest/cases",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"author",
								"quest",
								"cases"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "artifact",
			"item": [
				{
					"name": "/artifact",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "multipart/form-data",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/home/hmatt/Desktop/Jacinto-images/desafio-pocus.png"
								},
								{
									"key": "caseId",
									"value": "8fac1e26-5824-4b19-9d7b-5091e10856b3",
									"type": "text",
									"disabled": true
								},
								{
									"key": "questId",
									"value": "5131b64a-04ff-4aec-af98-0edab334fd02",
									"type": "text",
									"disabled": true
								},
								{
									"key": "id",
									"value": "desafio-pocus-image",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/artifact",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"artifact"
							]
						}
					},
					"response": []
				},
				{
					"name": "/artifact",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api-base-url}}/artifact/2958b5c9-aa7b-4bf1-882d-4bb47b6f40c4",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"artifact",
								"2958b5c9-aa7b-4bf1-882d-4bb47b6f40c4"
							]
						}
					},
					"response": []
				},
				{
					"name": "/artifact/list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "caseId",
									"value": "",
									"description": "id (hash code) of the case that contains the artifacts",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/artifact/list",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"artifact",
								"list"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "quest",
			"item": [
				{
					"name": "/quest/users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "questId",
									"value": "5885fb0d-ce64-421f-9b9e-1ea2cef3143f",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/quest/users",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"quest",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "/quest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();",
									"",
									"pm.environment.set(\"quest-id\", response.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "default-quest",
									"type": "text"
								},
								{
									"key": "color",
									"value": "#505050",
									"type": "text"
								},
								{
									"key": "artifact_id",
									"value": "",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/quest/",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"quest",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/quest/link/user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "userId",
									"value": "5a0064c7-fc6a-4629-b33a-bd835d8efd64",
									"type": "text"
								},
								{
									"key": "questId",
									"value": "c458b50b-3cae-4df8-a9eb-b2bed98ae640",
									"type": "text"
								},
								{
									"key": "roleSlug",
									"value": "player",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/quest/link/user",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"quest",
								"link",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "/quest/link/case",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "questId",
									"value": "",
									"type": "text"
								},
								{
									"key": "caseId",
									"value": "",
									"type": "text"
								},
								{
									"key": "orderPosition",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/quest/link/case",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"quest",
								"link",
								"case"
							]
						}
					},
					"response": []
				},
				{
					"name": "quest/annotation",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "quest_id",
									"value": "",
									"description": "id of the quest that contains a case with the annotation",
									"type": "text"
								},
								{
									"key": "property_id",
									"value": "dc:description",
									"description": "id of the property related to the annotation (if empty default is dc:description)",
									"type": "text",
									"disabled": true
								},
								{
									"key": "fragment",
									"value": "a text fragment",
									"description": "copy of the annotated fragment in a case inside this quest",
									"type": "text"
								},
								{
									"key": "",
									"value": "",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/quest/annotation",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"quest",
								"annotation"
							]
						}
					},
					"response": []
				},
				{
					"name": "/quest/annotations",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "quest_id",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/quest/annotations",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"quest",
								"annotations"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "category",
			"item": [
				{
					"name": "/category/cases",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "categoryId",
									"value": "pocus-training",
									"type": "text"
								},
								{
									"key": "clearance",
									"value": "4",
									"type": "text"
								},
								{
									"key": "published",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "fInstitution",
									"value": "c5562bfd-9a94-40f0-b08a-3627e3e417e0",
									"type": "text",
									"disabled": true
								},
								{
									"key": "fUserType",
									"value": "student",
									"type": "text",
									"disabled": true
								},
								{
									"key": "fSpecialty",
									"value": "0",
									"type": "text",
									"disabled": true
								},
								{
									"key": "fProperty",
									"value": "feedback",
									"type": "text",
									"disabled": true
								},
								{
									"key": "fPropertyValue",
									"value": "1",
									"type": "text",
									"disabled": true
								},
								{
									"key": "fSearchStr",
									"value": "simple",
									"description": "Text search for case title, description and keyword",
									"type": "text"
								},
								{
									"key": "nItems",
									"value": "10",
									"type": "text"
								},
								{
									"key": "nPage",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/category/cases",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"category",
								"cases"
							]
						}
					},
					"response": []
				},
				{
					"name": "/category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();",
									"",
									"pm.environment.set(\"quest-id\", response.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "id",
									"value": "pocus-training",
									"type": "text"
								},
								{
									"key": "title",
									"value": "Treinamento POCUS",
									"type": "text"
								},
								{
									"key": "template",
									"value": "pocus-training",
									"type": "text"
								},
								{
									"key": "artifact_id",
									"value": "pocus-training-image",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/category/",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"category",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/category/link/case",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "categoryId",
									"value": "decisoes-extremas",
									"type": "text"
								},
								{
									"key": "caseId",
									"value": "150f89f4-ff11-4795-9d20-a424c025be19",
									"type": "text"
								},
								{
									"key": "orderPosition",
									"value": "0",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/category/link/case",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"category",
								"link",
								"case"
							]
						}
					},
					"response": []
				},
				{
					"name": "/category/list",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{api-base-url}}/category/list",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"category",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "/category/:id",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{api-base-url}}/category/pocus-training?artifactId=093ebf5d-5cec-48b3-8730-12f92e8a1ffd&title=Treinamento POCUS",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"category",
								"pocus-training"
							],
							"query": [
								{
									"key": "artifactId",
									"value": "093ebf5d-5cec-48b3-8730-12f92e8a1ffd"
								},
								{
									"key": "title",
									"value": "Treinamento POCUS"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "institution",
			"item": [
				{
					"name": "/institutions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-base-url}}/institutions",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"institutions"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "admin",
			"item": [
				{
					"name": "/admin/cases",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();",
									"",
									"// pm.environment.set(\"case-id\", response.token);",
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    ",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{api-base-url}}/admin/cases",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"admin",
								"cases"
							]
						}
					},
					"response": []
				},
				{
					"name": "/admin/groups",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();",
									"",
									"// pm.environment.set(\"case-id\", response.token);",
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    ",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{api-base-url}}/admin/groups",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"admin",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "/admin/users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();",
									"",
									"console.log(response);",
									"        ",
									"checkUserID = function(){",
									"    ",
									"    for(var index in response){",
									"        ",
									"        if (response[index].id === pm.variables.get(\"user-id\"))",
									"            return true;",
									"            ",
									"    }",
									"    ",
									"    throw new Error(\"user-id not found\");",
									"    ",
									"}",
									"",
									"pm.test(\"Checking if user ID is present\",checkUserID)"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{api-base-url}}/admin/users?fGroup=8a419a89-4692-4b32-b485-82a2df44f31f",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"admin",
								"users"
							],
							"query": [
								{
									"key": "fInstitution",
									"value": "e31a6421-0f72-4ed9-8383-dcd70910230b",
									"disabled": true
								},
								{
									"key": "fUserType",
									"value": "student",
									"disabled": true
								},
								{
									"key": "fGroup",
									"value": "8a419a89-4692-4b32-b485-82a2df44f31f"
								},
								{
									"key": "nItems",
									"value": "10",
									"disabled": true
								},
								{
									"key": "nPage",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/admin/roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-base-url}}/admin/roles",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"admin",
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "/admin/user/{{user-id}}/roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-base-url}}/admin/user/1d6851cf-f3c7-4a00-8b5c-7fd7b0f36db9/roles",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"admin",
								"user",
								"1d6851cf-f3c7-4a00-8b5c-7fd7b0f36db9",
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "/admin/quests",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-base-url}}/admin/quests",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"admin",
								"quests"
							]
						}
					},
					"response": []
				},
				{
					"name": "/user/property",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "userId",
									"value": "22d65a5f-fb24-459a-bf21-017873a9632c",
									"type": "text"
								},
								{
									"key": "propertyTitle",
									"value": "prognosis-highest-lvl",
									"description": "Optional (To list just a specific property)",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/admin/user/property",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"admin",
								"user",
								"property"
							]
						}
					},
					"response": []
				},
				{
					"name": "/admin/user/link/role",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "userId",
									"value": "ec4ab025-879d-4e8b-b4d1-2b5e847c08e0",
									"type": "text"
								},
								{
									"key": "roleId",
									"value": "74448d95-fd3f-4dc1-a424-cf73c97ced45",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/admin/user/link/role",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"admin",
								"user",
								"link",
								"role"
							]
						}
					},
					"response": []
				},
				{
					"name": "/admin/institution",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "acronym",
									"value": "progn",
									"type": "text"
								},
								{
									"key": "title",
									"value": "Prognosis Game",
									"type": "text"
								},
								{
									"key": "country",
									"value": "BR",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/admin/institution",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"admin",
								"institution"
							]
						}
					},
					"response": []
				},
				{
					"name": "/admin/revoke_tokens",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{api-base-url}}/admin/revoke_tokens",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"admin",
								"revoke_tokens"
							]
						}
					},
					"response": []
				},
				{
					"name": "/admin/quest/link/user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "userId",
									"value": "d14252e7-57d2-4577-b0cc-7fcd23161452",
									"type": "text"
								},
								{
									"key": "questId",
									"value": "5bc14c72-2862-45e7-9239-2e71e64bb9cc",
									"type": "text"
								},
								{
									"key": "roleSlug",
									"value": "author",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/admin/quest/link/user",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"admin",
								"quest",
								"link",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "/user/property",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "userId",
									"value": "",
									"type": "text"
								},
								{
									"key": "propertyTitle",
									"value": "prognosis-current-lvl",
									"type": "text"
								},
								{
									"key": "propertyValue",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/admin/user/property",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"admin",
								"user",
								"property"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create role",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Project Manager",
									"type": "text"
								},
								{
									"key": "slug",
									"value": "manager",
									"type": "text"
								},
								{
									"key": "description",
									"value": "Research project member",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/admin/role",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"admin",
								"role"
							]
						}
					},
					"response": []
				},
				{
					"name": "/admin/user/:id",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "edu",
									"type": "text",
									"disabled": true
								},
								{
									"key": "email",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "login",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "password",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "grade",
									"value": "test",
									"type": "text",
									"disabled": true
								},
								{
									"key": "institution_id",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "course_id",
									"value": "",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/admin/user/75131920-cd37-441a-a86e-a2c538d33d64",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"admin",
								"user",
								"75131920-cd37-441a-a86e-a2c538d33d64"
							]
						}
					},
					"response": []
				},
				{
					"name": "/user/property",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "userId",
									"value": "6e45f06d-dcec-4c86-98a8-01efe1337e5f",
									"type": "text"
								},
								{
									"key": "propertyTitle",
									"value": "prognosis-highest-lvl",
									"type": "text"
								},
								{
									"key": "propertyValue",
									"value": "10",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/admin/user/property/",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"admin",
								"user",
								"property",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/user/temp_login",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "userId",
									"value": "54d98eef-0352-4a93-bb45-5bf1ac926ce8",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/admin/user/temp_login/",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"admin",
								"user",
								"temp_login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/admin/quest/{{id}}",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				}
			],
			"description": "Services for administrate `harena`"
		},
		{
			"name": "group",
			"item": [
				{
					"name": "/group/cases (wip)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "groupId",
									"value": "",
									"description": "group id (hash code)",
									"type": "text"
								},
								{
									"key": "nItems",
									"value": "20",
									"type": "text"
								},
								{
									"key": "nPage",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/group/cases",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"group",
								"cases"
							]
						}
					},
					"response": []
				},
				{
					"name": "/group (wip)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{api-base-url}}/group",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"group"
							]
						}
					},
					"response": []
				},
				{
					"name": "/group/users (wip)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "groupId",
									"value": "",
									"description": "group id (hash code)",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/group/users",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"group",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "/group/managers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "groupId",
									"value": "",
									"description": "group id (hash code)",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/group/managers",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"group",
								"managers"
							]
						}
					},
					"response": []
				},
				{
					"name": "/group/user (wip)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "groupId",
									"value": "",
									"description": "group id (hash code)",
									"type": "text"
								},
								{
									"key": "userId",
									"value": "",
									"description": "user id (hash code)",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/group/user",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"group",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "/group (wip)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();",
									"",
									"pm.environment.set(\"quest-id\", response.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "",
									"description": "group title (free title text)",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/group/",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"group",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/group/link/user (wip)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "groupId",
									"value": "",
									"type": "text"
								},
								{
									"key": "userId",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/group/link/user",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"group",
								"link",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "/group/link/manager",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "groupId",
									"value": "",
									"type": "text"
								},
								{
									"key": "userId",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/group/link/manager",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"group",
								"link",
								"manager"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "logger",
			"item": [
				{
					"name": "/logger",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();",
									"",
									"pm.environment.set(\"quest-id\", response.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "caseId",
									"value": "",
									"description": "id (hash code) of the case related to the log",
									"type": "text"
								},
								{
									"key": "instanceId",
									"value": "",
									"description": "id (hash code) of the running instance of the case related to the log ",
									"type": "text"
								},
								{
									"key": "log",
									"value": "",
									"description": "free format text to be logged -- usually a JSON content",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/logger",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"logger"
							]
						}
					},
					"response": []
				},
				{
					"name": "/logger/list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "caseId",
									"value": "",
									"description": "id (hash code) or title of the case related to the log - optional",
									"type": "text"
								},
								{
									"key": "institutionId",
									"value": "progn",
									"description": "id or acronym of the institution of the user - optional",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/logger/list",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"logger",
								"list"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "event",
			"item": [
				{
					"name": "/event",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();",
									"",
									"pm.environment.set(\"quest-id\", response.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "",
									"description": "free text title of the event",
									"type": "text"
								},
								{
									"key": "description",
									"value": "",
									"description": "free text description of the event",
									"type": "text"
								},
								{
									"key": "startAt",
									"value": "",
									"description": "date when the event starts (optional)",
									"type": "text"
								},
								{
									"key": "endAt",
									"value": "",
									"description": "date when the event ends (optional)",
									"type": "text"
								},
								{
									"key": "open",
									"value": "",
									"description": "boolean indicating if the event allows participation of non registered users",
									"type": "text"
								},
								{
									"key": "active",
									"value": "1",
									"description": "boolean indicating if the event is receiving registrations",
									"type": "text"
								},
								{
									"key": "caseId",
									"value": "",
									"description": "id (hash code) of a case related to the event (optional)",
									"type": "text"
								},
								{
									"key": "questId",
									"value": "",
									"description": "id (hash code) of a quest related to the event (optional)",
									"type": "text"
								},
								{
									"key": "groupId",
									"value": "",
									"description": "id (hash code) of the group assigned to self signin users in this event",
									"type": "text"
								},
								{
									"key": "institutionId",
									"value": "",
									"description": "id (hash code) of the institution promoting the event",
									"type": "text"
								},
								{
									"key": "roleId",
									"value": "",
									"description": "id (hash code) of the role received by self signin users in this event",
									"type": "text"
								},
								{
									"key": "participantsLimit",
									"value": "50",
									"description": "limit of participants in the event",
									"type": "text"
								},
								{
									"key": "youngerAge",
									"value": "",
									"description": "lower limit of the age for the event",
									"type": "text"
								},
								{
									"key": "olderAge",
									"value": "",
									"description": "upper limit of the age for the event",
									"type": "text"
								},
								{
									"key": "conferenceAddress",
									"value": "",
									"description": "URL of the event",
									"type": "text"
								},
								{
									"key": "termId",
									"value": "",
									"description": "id of the term to be agreed by users in case of research (foreign key to term table)",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/event",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"event"
							]
						}
					},
					"response": []
				},
				{
					"name": "/events",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-base-url}}/event/list",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"event",
								"list"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "term",
			"item": [
				{
					"name": "/term",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();",
									"",
									"pm.environment.set(\"quest-id\", response.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "id",
									"value": "",
									"description": "unique id of the term",
									"type": "text"
								},
								{
									"key": "title",
									"value": "",
									"description": "free text title of the term",
									"type": "text"
								},
								{
									"key": "adultTerm",
									"value": "",
									"description": "address to reach the adult term",
									"type": "text"
								},
								{
									"key": "childTerm",
									"value": "",
									"description": "address to reach the child term",
									"type": "text"
								},
								{
									"key": "imageCapture",
									"value": "",
									"description": "boolean defined if images will be captured during the event",
									"type": "text"
								},
								{
									"key": "videoCapture",
									"value": "",
									"description": "boolean defined if videos will be captured during the event",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/term",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"term"
							]
						}
					},
					"response": []
				},
				{
					"name": "/term/link/user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();",
									"",
									"pm.environment.set(\"quest-id\", response.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "userId",
									"value": "",
									"description": "id (hash code) of the user that agrees (or not) with the term",
									"type": "text"
								},
								{
									"key": "termId",
									"value": "",
									"description": "id of the term (foreign key to the term table)",
									"type": "text"
								},
								{
									"key": "nameResponsible",
									"value": "",
									"description": "full name of the person responsible",
									"type": "text"
								},
								{
									"key": "emailResponsible",
									"value": "",
									"description": "email of the person responsible",
									"type": "text"
								},
								{
									"key": "nameParticipant",
									"value": "",
									"description": "full name of the participant",
									"type": "text"
								},
								{
									"key": "date",
									"value": "",
									"description": "date of agreement",
									"type": "text"
								},
								{
									"key": "role",
									"value": "",
									"description": "indication of the role of the one who agree with the term (child, adult or responsible)",
									"type": "text"
								},
								{
									"key": "agree",
									"value": "1",
									"description": "boolean - indicating if the participant or responsible (indicated by the role) agreed with the term",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/term/link/user",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"term",
								"link",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "/term/user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "termId",
									"value": "",
									"description": "id of the term",
									"type": "text"
								},
								{
									"key": "userId",
									"value": "",
									"description": "id (hash code) of the user to be queried",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/term/user",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"term",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "/term/list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{api-base-url}}/term/list",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"term",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "/term/users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "termId",
									"value": "",
									"description": "id of the term",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/term/users",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"term",
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "knowledge",
			"item": [
				{
					"name": "property",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "id",
									"value": "dc:description",
									"description": "property unique id (if empty, the system generates an UUID)",
									"type": "text"
								},
								{
									"key": "title",
									"value": "Dublin Core Description",
									"description": "property title (free title text)",
									"type": "text"
								},
								{
									"key": "description",
									"value": "An account of the resource (http://purl.org/dc/elements/1.1/description).",
									"description": "property short description (free text)",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-base-url}}/knowledge/property",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"knowledge",
								"property"
							]
						}
					},
					"response": []
				},
				{
					"name": "properties",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-base-url}}/knowledge/properties",
							"host": [
								"{{api-base-url}}"
							],
							"path": [
								"knowledge",
								"properties"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{user-token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}